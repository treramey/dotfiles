set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m' 

# Proper prefix
unbind C-b
set-option -g prefix C-space

# prefix + r  reload configuration
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded"

# mouse on
setw -g mouse on

# clipboard
set -s set-clipboard external
set -as terminal-features ',xterm-ghostty:clipboard'

# renumber-windows when removing 
set-option -g renumber-windows on

# set index
set -g base-index 1
setw -g pane-base-index 1

# act like vim
setw -g mode-keys vi
set -g status-keys vi

# get rid of the kill paine message
unbind x
bind x kill-pane

# Bind m to maximize the current pane
unbind z
unbind m
bind m resize-pane -Z

# Alternate sessions
unbind Space
bind-key Space switch-client -l

# When pressing prefix+s to list sessions, I want them sorted by time
bind s choose-tree -Zs -O time

# Use Ctrl+h, Ctrl+j, Ctrl+k, and Ctrl+l for pane selection
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# resize pane
bind -r up resizep -U 5 # upward (prefix Ctrl+k)
bind -r down resizep -D 5 # downward (prefix Ctrl+j)
bind -r left resizep -L 5 # to the left (prefix Ctrl+h)
bind -r right resizep -R 5 # to the right (prefix Ctrl+l)

# create new windows/panes in same directory
bind c new-window
bind-key | split-window -hc "#{pane_current_path}"
bind-key - split-window -l25% -vc "#{pane_current_path}"

bind -r H select-window -t :-
bind -r L select-window -t :+


# Decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind -r D neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/.dotfiles/personal/todo.md"
bind-key -r f run-shell "tmux neww ~/.local/scripts/tmux-sessionizer"
bind-key -r N run-shell "~/.local/scripts/tmux-sessionizer ~/.config/nvim"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'treramey/tmux2k' # theme

# THEME
set-option -g status-position top

# use a theme
set -g @tmux2k-theme 'default'

# to show icons only
set -g @tmux2k-icons-only true
set -g @tmux2k-bg-main default

# to not show powerline
set -g @tmux2k-show-powerline false
set -g @tmux2k-window-list-flags true

# set the left and right plugin sections
set -g @tmux2k-left-plugins " "

# Hide some info that doesn't make sense when developing remotely
{{- if (eq .chezmoi.os "linux") }}
set -g @tmux2k-right-plugins "cpu ram time"
{{- else}}
set -g @tmux2k-right-plugins "cpu ram battery time"
{{- end}}

set -g @tmux2k-military-time true

# set -g @resurrect-capture-pane-contents 'on'
# set -g @continuum-restore 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
