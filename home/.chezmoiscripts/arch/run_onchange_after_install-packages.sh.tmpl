#!/bin/bash
set -eufo pipefail

{{ if (eq .chezmoi.os "arch") -}}
packages=(
    air-bin
    arp-scan
    autoconf
    base
    base-devel
    bat
    bind
    bun-bin
    cloudflared
    cmake
    composer
    consolas-font
    curl
    direnv
    dmidecode
    dmraid
    docker
    docker-compose
    downgrade
    esbuild
    fd
    ffmpeg
    ffmpegthumbnailer
    fuse-overlayfs
    fzf
    gettext
    git
    git-delta
    github-cli
    gleam
    go
    goreleaser
    hyperfine
    imagemagick
    inetutils
    iwd
    jq
    julia
    just
    jdk-openjdk
    lazygit
    less
    libaio
    libldm
    luarocks
    lynx
    make
    mysql-clients
    mono
    ncdu
    neofetch
    neovim
    ngrok
    ninja
    nmap
    nodejs-lts-iron
    noto-fonts-emoji
    nushell
    openssh
    pkgconf
    plow
    pnpm
    poppler
    postgresql
    prettierd
    pscale-cli-bin
    pspg
    pv
    python
    python-pip
    reflector
    ripgrep
    rsync
    speedtest-cli
    sshfs
    sshuttle
    sst-bin
    starship
    sudo
    syncthing
    sysbench
    tailscale
    terraform
    traceroute
    typescript
    unison
    unrar
    unzip
    uv
    vercel
    wget
    xclip
    yazi
    yt-dlp
    zellij
    zip
    zoxide
    zsh
    zsh-syntax-highlighting
    btop
    cronie
    elixir
    gitwatch-git
    iperf3
    linux
    linux-firmware
    lsof
    mariadb-clients
    exfat-utils
    iw
    stow
    nfs-utils
    rustup
)


# Function to install a package with auto-selection of the first option if multiple are available
install_package() {
    local package=$1
    # Try to install the package normally first
    if ! paru -S --needed --noconfirm "$package" 2>/dev/null; then
        echo "Multiple versions available for $package. Installing the first option..."
        # Use yes to automatically select the first option (1) for any prompts
        yes "1" | paru -S --needed "$package"
    fi
}

# Check if paru is installed
if ! command -v paru &> /dev/null; then
    echo "Installing paru..."
    git clone https://aur.archlinux.org/paru.git
    cd paru
    makepkg -si --noconfirm
    cd ..
    rm -rf paru
fi

# Update package database
echo "Updating package database..."
paru -Syu

# Install packages
echo "Installing packages..."
for package in "${packages[@]}"; do
    echo "Installing $package..."
    install_package "$package"
done

echo "Package installation complete!"
{{ end -}}
